# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-blnxngsched
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

###############################################################################
# Setup library
###############################################################################
include(GrPlatform) #define LIB_SUFFIX

###############################################################################
#    CUDA Kernels to be compiled with NVCC
###############################################################################
message(status "C_FLAGS: " ${CMAKE_C_FLAGS})
message(status "CXX_FLAGS: " ${CMAKE_CXX_FLAGS})

find_package(CUDA REQUIRED)
add_library(gnuradio-blnxngsched-cu STATIC 
    copy.cu
    )
set_target_properties(gnuradio-blnxngsched-cu PROPERTIES 
    POSITION_INDEPENDENT_CODE ON
    CUDA_VISIBILITY_PRESET "hidden"
    CUDA_SEPARABLE_COMPILATION ON
)
#~ target_compile_options(gnuradio-blnxngsched-cu PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:-gencode arch=compute_75,code=sm_75>)



list(APPEND blnxngsched_sources
    fake_hw_loopback_impl.cc
    cuda_loopback_impl.cc
)

set(blnxngsched_sources "${blnxngsched_sources}" PARENT_SCOPE)
if(NOT blnxngsched_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT blnxngsched_sources)

add_library(gnuradio-blnxngsched SHARED ${blnxngsched_sources})
target_link_libraries(gnuradio-blnxngsched PUBLIC
    gnuradio::gnuradio-runtime
    ${CUDA_CUDA_LIBRARY}
    ${CUDA_CUDART_LIBRARY}  
    )
target_link_libraries(gnuradio-blnxngsched PRIVATE 
    gnuradio-blnxngsched-cu
    )
        
target_include_directories(gnuradio-blnxngsched
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
    ${CUDA_INCLUDE_DIRS} 
    )    

  
set_target_properties(gnuradio-blnxngsched PROPERTIES DEFINE_SYMBOL "gnuradio_blnxngsched_EXPORTS")

if(APPLE)
    set_target_properties(gnuradio-blnxngsched PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-blnxngsched)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_blnxngsched_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-blnxngsched)

if(NOT test_blnxngsched_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_blnxngsched_sources)

foreach(qa_file ${test_blnxngsched_sources})
    GR_ADD_CPP_TEST("blnxngsched_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)
